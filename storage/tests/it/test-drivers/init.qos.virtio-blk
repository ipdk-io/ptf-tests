#!/usr/bin/env bash
#
# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

set -e
[ "$DEBUG" == 'true' ] && set -x

current_script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
declare vm_serial
declare nqn
declare storage_target_ip
declare ipu_storage_container_ip
declare virtio_blk_virtual_id
declare port_to_expose
declare host_target_ip
# shellcheck disable=SC1091,SC1090
source "${current_script_dir}"/test-helpers


wait_until_port_on_ip_addr_open "${storage_target_ip}" "${DEFAULT_SPDK_PORT}"
create_and_expose_sybsystem_over_tcp \
	"${storage_target_ip}" "${nqn}" "${port_to_expose}"
ramdrive_size_in_mb=16
malloc0=$(create_ramdrive_and_attach_as_ns_to_subsystem \
	"${storage_target_ip}" Malloc0 "${ramdrive_size_in_mb}" "${nqn}")

wait_until_vm_is_up "${vm_serial}"

log_in_with_default_credentials "${vm_serial}"

wait_until_host_target_is_up "${vm_serial}"

virtio_blk0_physical_id=0
virtio_blk0=$(create_virtio_blk "${ipu_storage_container_ip}" \
	"$DEFAULT_SMA_PORT" "$host_target_ip" "$DEFAULT_HOST_TARGET_SERVICE_PORT" \
	"${malloc0}" \
	"${virtio_blk0_physical_id}" "${virtio_blk_virtual_id}" \
	"${nqn}" "${storage_target_ip}" "${port_to_expose}")
verify_expected_number_of_virtio_blk_devices "${vm_serial}" 1


qos_capabilities=$(get_virtio_blk_qos_capabilities "$ipu_storage_container_ip" "$DEFAULT_SMA_PORT")
echo "QoS capabilities: $qos_capabilities"

if is_device_qos_supported "$qos_capabilities"; then
	export IPU_STORAGE_CONTAINER_IP="$ipu_storage_container_ip"
	export HOST_TARGET_IP="$host_target_ip"
	export QOS_CAPABILITIES="$qos_capabilities"
	export DEVICE_HANDLE="$virtio_blk0"
	export VOLUME=""
	bash "$current_script_dir"/test-max-qos
else
	echo "Virtio-blk device does not support required QoS capabilities"
fi

delete_virtio_blk "${ipu_storage_container_ip}" \
	"$DEFAULT_SMA_PORT" "$host_target_ip" "$DEFAULT_HOST_TARGET_SERVICE_PORT" \
	"${virtio_blk0}"

echo "QoS virtio-blk test passed successfully"
